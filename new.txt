import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
import org.apache.flink.streaming.api.functions.source.SourceFunction;
import org.apache.flink.streaming.connectors.kafka.KafkaSource;
import org.apache.flink.streaming.connectors.kafka.internals.KafkaTopicPartition;
import org.apache.flink.streaming.util.serialization.SimpleStringSchema;

import java.util.Properties;

public class KafkaSourceCreator {

    public static KafkaSource<String> createKafkaSource(String bootstrapServers, String topic, String groupId) {
        Properties properties = new Properties();
        properties.setProperty("bootstrap.servers", bootstrapServers);
        properties.setProperty("group.id", groupId);

        KafkaTopicPartition topicPartition = new KafkaTopicPartition(topic, 0);
        KafkaSource<String> kafkaSource = new KafkaSource<>(new SimpleStringSchema(), properties);
        kafkaSource.setStartFromSpecificOffsets(topicPartition);

        return kafkaSource;
    }

    public static void main(String[] args) throws Exception {
        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();

        KafkaSource<String> source = createKafkaSource("172.22.223.112:9092", "input-topic", "my-group");

        env.addSource(source).print();

        env.execute("KafkaSourceExample");
    }
}
